 Problems,Solved,week,Topic
 Left Rotation of the array by 1,1,1,Arrays
 Left Rotation of the array by D places,1,1,Arrays
 Leaders in an Array,1,1,Arrays
 Maximum Difference Problem,1,1,Arrays
 Stock Buy and Sell Problem,1,1,Arrays
 Trapping Rainwater Problem,1,1,Arrays
 Maximum subarray sum,1,1,Arrays
 Longest even-odd subarray,1,1,Arrays
 Maximum Circular sum subarray.,1,1,Arrays
 Majority Element,1,1,Arrays
 Sliding Window Technique,1,1,Arrays
 Prefix sum technique etc.,1,1,Arrays
" Check Kth bit is set or not, Using the left Shift.",0,2,bits
" Check Kth bit is set or not, Using the right shift",0,2,bits
" Count Set Bits, Simple method, Brian and Kerningham Algorithm, Using Lookup Table",0,2,bits
 To check whether a number is a power of 2 or not,0,2,bits
 Odd occurrences in an array,0,2,bits
 Two numbers having odd occurrences in an array,0,2,bits
 Generate power set using bitwise operators,0,2,bits
 Hashing Introduction and Time complexity analysis,0,2,Hashing
" Hashing, Direct Address Table",0,2,Hashing
 Working and examples on various Hash Functions,0,2,Hashing
 Introduction and Various techniques on Collision Handling,0,2,Hashing
 Chaining and its implementation,0,2,Hashing
 Open Addressing and its Implementation,0,2,Hashing
 Chaining V/S Open Addressing,0,2,Hashing
 Double Hashing,0,2,Hashing
 Unordered Set,0,2,Hashing
 Unordered Map,0,2,Hashing
 Count Distinct Elements,0,2,Hashing
 Count of the frequency of array elements,0,2,Hashing
 The intersection of two arrays,0,2,Hashing
 Union of two unsorted arrays,0,2,Hashing
 Pair with given sum in an unsorted array,0,2,Hashing
 Subarray with zero-sum,0,2,Hashing
 Subarray with given sum,0,2,Hashing
 Longest subarray with a given sum,0,2,Hashing
 Longest subarray with an equal number of 0's and 1's,0,2,Hashing
 Longest common span with the same sum in a binary array,0,2,Hashing
 Longest Consecutive Subsequence,0,2,Hashing
 Count Distinct elements in every window,0,2,Hashing
" Given a string, check if they are an anagram of each other.",0,3,String
" Given a string, find the leftmost character that repeats.",0,3,String
" Given a string, find the leftmost character that does not repeat.",0,3,String
" Given a string, find the lexicographic rank of it in O(n) time.",0,3,String
 Implementation of the previously discussed lexicographic rank problem.,0,3,String
" Given a text string and a pattern string, find if a permutation of the pattern exists in the text.",0,3,String
" Given two strings, check if they are rotations of each other or not.",0,3,String
 Various Pattern Searching Algorithms.,0,3,String
" Linked Lists, creation, search, Deletion",1,3,Linkedlist
" Doubly Linked List, creation, search, Deletion",1,3,Linkedlist
" Circular Linked List, creation, search, Deletion",1,3,Linkedlist
 Detecting Loops,1,3,Linkedlist
 Detecting loops using Floyd cycle detection,1,3,Linkedlist
 Middle of Linked List,1,4,Linkedlist
 Nth node from the end of linked list,1,4,Linkedlist
 Deleting a Node without accessing Head pointer of Linked List,1,4,Linkedlist
 An iterative method to Reverse a linked list ,1,4,Linkedlist
 Recursive method to reverse a linked list,1,4,Linkedlist
 Segregating even-odd nodes of linked list,1,4,Linkedlist
 The intersection of two linked list,1,4,Linkedlist
 Pairwise swap nodes of linked list,1,4,Linkedlist
 Clone a linked list using a random pointer,1,4,Linkedlist
 LRU Cache Design,1,4,Linkedlist
 Implementation of Stack in Array and Linked List,1,4,Stacks
 Balanced Parenthesis ,1,4,Stacks
 Two stacks in an array ,1,4,Stacks
 K Stacks in an array ,1,4,Stacks
 Stock span problem with variations,1,4,Stacks
 Previous Greater Element ,1,4,Stacks
 Next Greater Element ,1,4,Stacks
 Largest Rectangular Area in a Histogram,1,4,Stacks
 Implementation of the queue using array and LinkedList,1,4,Queues
 Stack using queue,1,4,Queues
 Reversing a Queue,1,4,Queues
 Generate numbers with given digits,1,4,Queues
 Maximums of all subarrays of size k,1,4,Queues
" binary tree, create, search, delete",1,5,Tree
 Inorder Traversal ,1,5,Tree
 Preorder Traversal ,1,5,Tree
 Postorder Traversal ,1,5,Tree
 Level Order Traversal (Line by Line),1,5,Tree
 Tree Traversal in Spiral Form ,1,5,Tree
 Size of Binary Tree ,1,5,Tree
 Maximum in Binary Tree ,1,5,Tree
 Height of Binary Tree ,1,5,Tree
 Print Nodes at K distance ,1,5,Tree
 Print Left View of Binary Tree ,1,5,Tree
 Children Sum Property ,1,5,Tree
 Check for Balanced Binary Tree ,1,5,Tree
 Maximum Width of Binary Tree ,1,5,Tree
 Convert Binary Tree to Doubly Linked List ,1,5,Tree
 Construct Binary Tree from Inorder and Preorder ,1,5,Tree
 The diameter of a Binary Tree ,1,5,Tree
 LCA problem with an efficient solution,1,5,Tree
" BST, Create, search, delete",1,5,Tree
 Floor in BST ,0,5,Tree
 Self Balancing BST ,0,5,Tree
 AVL Tree ,0,5,Tree
 Red Black Tree ,0,5,Tree
 The ceiling of a key in BST,0,5,Tree
 Ceiling on the left side in an array ,0,5,Tree
 Find Kth Smallest in BST ,0,5,Tree
 Check for BST ,0,5,Tree
 Fix BST with Two Nodes Swapped ,0,5,Tree
 Pair Sum with given BST ,0,5,Tree
 Vertical Sum in a Binary Tree ,0,5,Tree
 Vertical Traversal of Binary Tree ,0,5,Tree
 Top View of Binary Tree ,0,5,Tree
 Bottom View of Binary Tree ,0,5,Tree
" Heaps, Introduction & Implementation",0,6,Heap
" Binary Heap, Insertion",0,6,Heap
" Binary Heap, Heapify and Extract",0,6,Heap
" Binary Heap, Decrease Key, Delete and Build Heap",0,6,Heap
 Heap Sort ,0,6,Heap
 Priority Queue,0,6,Heap
 Sort K-Sorted Array ,0,6,Heap
 Buy Maximum Items with Given Sum ,0,6,Heap
 K Largest Elements ,0,6,Heap
 Merge K Sorted Arrays ,0,6,Heap
 Median of a Stream,0,6,Heap
" Graph Representation, Adjacency Matrix",0,6,Graph
 Breadth-First Search ,0,6,Graph
 Depth First Search ,0,6,Graph
 Shortest Path in an Unweighted Graph ,0,7,Graph
 Number of Islands,0,7,Graph
 Snake-Ladder,0,7,Graph
" Detecting Cycle, In the Undirected Graph ",0,7,Graph
" Detecting Cycle, In the Directed Graph",0,7,Graph
" Topological Sorting, Kahn's BFS Based Algorithm",0,7,Graph
" Topological Sorting, DFS Based Algorithm",0,7,Graph
 Shortest Path in Directed Acyclic Graph,0,7,Greedy Algo
" Greedy Algorithms, Introduction",0,7,Greedy Algo
 Activity Selection Problem,0,7,Greedy Algo
 Activity Selection Problem,0,7,Greedy Algo
 Job Sequencing Problem,0,7,Greedy Algo
" Dynamic Programming, Memoization ",0,8,DP
" Dynamic Programming, Tabulation",0,8,DP
 Longest Common Subsequence,0,8,DP
 Coin Change Count Combinations ,0,8,DP
" Edit Distance Problem, Naive Approach",0,8,DP
" Edit Distance Problem, DP Approach",0,8,DP
 Longest Increasing Subsequence Problem,0,8,DP
 Naive Approach,0,8,DP
 Efficient Approach,0,8,DP
 Maximum Cuts ,0,8,DP
 Minimum coins to make a value ,0,8,DP
 Minimum Jumps to reach at the end ,0,8,DP
" 0-1 knapsack problem, Naive Approach",0,8,DP
" 0-1 knapsack problem, Efficient Approach",0,8,DP
 Optimal Strategy for a Game ,0,8,DP
 Variation of Longest Common Subsequence ,0,8,DP
 Variation of Longest Increasing Subsequence ,0,8,DP
 Egg Dropping Problem ,0,8,DP
 Concepts of Backtracking ,0,9,Back tracking
 Rat In a Maze ,0,9,Back tracking
 N Queen Problem ,0,9,Back tracking
 Sudoku Problem ,0,9,Back tracking
" TRIE, Introduction",0,9,TRIE
" TRIE, Representation",0,9,TRIE
" TRIE, Search",0,9,TRIE
" TRIE, Insert",0,9,TRIE
" TRIE, Delete",0,9,TRIE
" TRIE, Implement a Dictionary etc.",0,9,TRIE
" Segment Tree, Introduction",0,9,TRIE
" Segment Tree, Construction",0,9,TRIE
" Segment Tree, Range Query ",0,9,TRIE
" Segment Tree, Update Query",0,9,TRIE
" Segment Tree, Design Patterns introduction",0,9,TRIE
